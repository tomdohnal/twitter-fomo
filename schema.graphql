type Community {
  name: String!
  accounts: [Account!]! @relation
}

enum AccountType {
  PERSONAL
  BUSINESS # hard to find the right name, what I mean is just the oppostite of personal
}

enum TweetType {
  TEXT
  MEDIA
  LINK
}

type Account {
  name: String! @unique
  twitterId: String! @unique
  communities: [Community!]! @relation
  type: AccountType!
}

type Hashtag {
  text: String!
  indices: [Int!]!
  tweet: Tweet!
}

type Size {
  width: Int!
  height: Int!
  resize: String!
  media: Media!
}

type Media {
  displayUrl: String!
  expandedUrl: String!
  indices: [Int!]!
  mediaUrl: String!
  mediaUrlHttps: String!
  sizes: [Size!]! @relation
  type: String!
  url: String!
  tweet: Tweet!
}

type UnwoundUrl {
  url: String!
  status: Int!
  title: String!
  description: String!
  tweet: Tweet!
}

type Url {
  displayUrl: String!
  expandedUrl: String!
  indices: [Int!]!
  url: String!
  unwound: UnwoundUrl
  tweet: Tweet!
}

type UserMention {
  id: String!
  indices: [Int!]!
  name: String!
  screenName: String!
  tweet: Tweet!
}

type Symbol {
  indices: [Int!]!
  text: String!
  tweet: Tweet!
}

type Tweet {
  list: List!
  twitterId: String!
  publishedAt: Time!
  text: String!
  accountName: String!
  account: Account! @relation
  favoritesCount: Int!
  hashtags: [Hashtag!] @relation
  media: [Media!] @relation
  urls: [Url!] @relation
  userMentions: [UserMention!] @relation
  symbols: [Symbol!] @relation
}

enum Period {
  DAY
  WEEK
}

type List {
  community: Community
  accountType: AccountType
  tweetType: TweetType
  tweets: [Tweet!]! @relation
  period: Period!
}

type Query {
  allAccounts: [Account!]!
  allCommunities: [Community!]!
  allLists: [List!]!
  recentList(
    communityId: ID
    tweetType: TweetType
    accountType: AccountType
    period: Period!
  ): List @resolver(name: "recent_list")
}
